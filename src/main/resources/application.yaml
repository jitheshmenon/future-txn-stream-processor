---
spring:
  cloud:
    stream:
      bindings:
        input:
          destination: connect-input
        input-formatted:
          destination: input-records
      schemaRegistryClient:
        endpoint: http://localhost:8081
      kafka:
        streams:
          binder:
            configuration:
              application:
                id: APP-1
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
              schema:
                registry:
                  url: ${spring.cloud.stream.schema-registry-client.endpoint}
              deserializationExceptionHandler: connect-input.DLT
          bindings:
            input:
              consumer:
                auto-offset-reset: earliest
                keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
                valueSerde: org.apache.kafka.common.serialization.Serdes$StringSerde
            input-formatted:
              producer:
                specific.avro.reader: true
                useNativeDecoding: true
                keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
                valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        binder:
          brokers: localhost:9092

